# [プロジェクト名] 開発プロセス進捗状況

**バージョン**: 0.1 (初期版)  
**最終更新日**: YYYY-MM-DD  
**ステータス**: 要件定義完了・モックアップ準備段階

## 1. 基本情報

- **ステータス**: 開発初期段階 (10% 完了)
- **完了タスク数**: 1/10
- **進捗率**: 10%
- **次のマイルストーン**: モックアップ完成 (目標: [日付])

## 2. 実装概要

[プロジェクト名]は、[プロジェクトの簡潔な説明を1-2文で記述します]。このプロジェクトは現在、要件定義が完了し、モックアップ作成段階に移行する準備が整っています。

詳細については[要件定義書](/docs/requirements.md)を参照してください。

## 3. 開発フロー進捗状況

AppGeniusでの開発は以下のフローに沿って進行します。現在の進捗は以下の通りです：

| フェーズ | 状態 | 進捗 | 担当エージェント | 成果物 |
|---------|------|------|----------------|--------|
| **1. 要件定義** | ✅ 完了 | 100% | プロジェクトファウンデーション (#1) | [requirements.md](/docs/requirements.md) |
| **2. 技術選定** | ✅ 完了 | 100% | プロジェクトファウンデーション (#1) | [tech-stack.md](/docs/architecture/tech-stack.md) |
| **3. モックアップ作成** | 🔄 準備中 | 0% | モックアップクリエイター (#2) | [mockups/](/mockups/) |
| **4. データモデル設計** | ⏱ 未着手 | 0% | データモデルアーキテクト (#3) | [shared/index.ts](/shared/index.ts) |
| **5. API設計** | ⏱ 未着手 | 0% | APIデザイナー (#4) | [docs/api/](/docs/api/) |
| **6. 実装計画** | ⏱ 未着手 | 0% | スコーププランナー (#8) | SCOPE_PROGRESS.md 更新 |
| **7. バックエンド実装** | ⏱ 未着手 | 0% | バックエンド実装エージェント (#10) | サーバーサイドコード |
| **8. フロントエンド実装** | ⏱ 未着手 | 0% | フロントエンド実装エージェント (#9) | クライアントサイドコード |
| **9. テスト** | ⏱ 未着手 | 0% | テスト管理エージェント (#11) | テストコード |
| **10. デプロイ準備** | ⏱ 未着手 | 0% | デプロイ設定エージェント (#13) | [docs/deployment/](/docs/deployment/) |

## 4. 現在のフォーカス: モックアップ作成

モックアップはプロジェクト成功の重要な基盤です。要件定義書に基づき、以下のモックアップを作成する必要があります：

### 4.1 必要なモックアップ

| ID | 画面名 | 優先度 | 状態 | 関連要件 |
|----|-------|-------|------|---------|
| M-001 | [ページ1] | 高 | 未着手 | [requirements.md#セクション](/docs/requirements.md#セクション) |
| M-002 | [ページ2] | 高 | 未着手 | [requirements.md#セクション](/docs/requirements.md#セクション) |
| M-003 | [ページ3] | 中 | 未着手 | [requirements.md#セクション](/docs/requirements.md#セクション) |
| M-004 | [共通コンポーネント] | 高 | 未着手 | [requirements.md#セクション](/docs/requirements.md#セクション) |

### 4.2 モックアップ作成手順

1. ✅ **要件定義の確認**
   - 各画面の目的と機能要件を理解する
   - ユーザーストーリーとユースケースを確認する

2. 🔄 **共通コンポーネントの設計**
   - ヘッダー、フッター、ナビゲーションなどの共通要素を設計
   - デザインシステムの基本要素（色、タイポグラフィ）を決定

3. ⏱ **メインページのモックアップ作成**
   - 最優先の画面から順に作成
   - インタラクションとユーザーフローを考慮した設計

4. ⏱ **モックアップレビュー**
   - 要件との整合性確認
   - ユーザビリティと視覚的一貫性の検証

5. ⏱ **モックアップ最終化**
   - フィードバックを反映した修正
   - データモデル設計に必要な情報の整理

## 5. 次のステップ

モックアップが完成したら、以下のステップに進みます：

1. **データモデル設計**
   - モックアップから必要なデータ構造を抽出
   - エンティティと関係性を定義
   - [shared/index.ts](/shared/index.ts)に型定義を実装

2. **API設計**
   - 必要なエンドポイントの特定
   - リクエスト/レスポンス形式の定義
   - セキュリティと認証要件の詳細化

3. **実装計画の策定**
   - 具体的なタスクへの分解
   - 依存関係と実装順序の決定
   - 優先順位付け

## 6. 参照ドキュメント

- **要件定義**: [requirements.md](/docs/requirements.md)
- **技術スタック**: [tech-stack.md](/docs/architecture/tech-stack.md)
- **開発方法論**: [developmentway2.md](/docs/prompts/developmentway2.md)
- **ディレクトリ構造案**: [directory-structure.md](/docs/architecture/directory-structure.md)

## 7. 現在の課題とリスク

| 課題/リスク | 影響度 | 対応状況 | 対応策 |
|------------|-------|---------|-------|
| 要件の詳細度不足 | 中 | 監視中 | モックアップ作成過程で具体化し、必要に応じて要件定義書を更新 |
| 技術選定の検証 | 低 | 対応済 | 技術スタックの初期検証完了、プロトタイピングで再検証予定 |

---

## 付録: AppGenius開発フロー参照

### A. プロジェクト開発標準フロー

```
[要件定義] → [モックアップ作成] → [データモデル設計] → [API設計] → [実装計画] → [フロントエンド/バックエンド実装] → [テスト] → [デプロイ]
```

### B. AIエージェント活用ガイド

モックアップ作成では、モックアップクリエイターエージェント (#2) を活用してください。以下のコマンドでエージェントを起動できます：

```
/activate モックアップクリエイター
```

エージェントには以下の情報を提供してください：
- 作成したい画面の名前と目的
- 画面に含める要素と機能
- 画面のユーザーフロー上の位置づけ
- 参考にしたいUIの例（もしあれば）

### C. 成果物チェックリスト

モックアップ完了時には以下の成果物が揃っていることを確認してください：

- [ ] mockups/index.html - モックアップナビゲーション
- [ ] mockups/components/ - 共通コンポーネント
- [ ] mockups/pages/ - 各ページのモックアップ
- [ ] 画面遷移図または説明
- [ ] データ要件メモ（データモデル設計への入力情報）